{"version":3,"sources":["todo/TodoItem.js","todo/TodoForm.js","todo/TodoSelect.js","todo/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","console","log","nextProps","nextState","todo","this","props","done","name","_this$props","index","onRemove","onDone","react_default","a","createElement","className","style","opacity","textDecoration","priority","notes","Button","variant","size","onClick","Component","TodoForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onValue1Change","value","setState","value1","onValue2Change","value2","onValue3Change","value3","onSubmit","e","preventDefault","handleSubmit","newTodo","state","input","React","createRef","_this2","type","placeholder","ref","onChange","target","TodoSelect","onFinished","onProgress","onAll","classname","TodoList","add","text","newTodos","concat","toConsumableArray","todos","remove","splice","all","fetch","then","resp","json","tasks","x","length","min","max","i","newTodos1","Array","k","j","finished","ongoing","_this3","todo_TodoSelect","map","todo_TodoItem","key","onEdit","edit","todo_TodoForm","App","todo_TodoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f85bcdf6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass TodoItem extends Component {\n    componentWillMount() {\n        console.log('will mount');\n    }\n\n    componentDidMount() {\n        console.log('did mount');\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log('will receive props: ', nextProps);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { todo } = this.props\n        return !(nextProps.done === todo.done\n                && nextState.name === todo.name);\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        console.log('will update');\n    }\n\n    componentDidUpdate(nextProps, nextState) {\n        console.log('did update');\n    }\n\n    componentWillUnmount() {\n        console.log('Sayonara!');\n     }\n\n    render() {\n        console.log('render');\n        const { todo, index, onRemove, onDone } = this.props\n        return (\n            <div\n              className=\"todo\"\n              style={{ opacity: todo.done ? 0.9 : 1 }}\n            >\n                <div\n                    className=\"text-container\"\n                    style={{ textDecoration: todo.done ? \"line-through\" : \"\" }}\n                >\n                    {todo.priority} | {todo.name}: {todo.notes}\n                </div>\n        \n                <div className=\"buttons-container\">\n                    <Button\n                        variant=\"outline-warning\"\n                        size=\"sm\"\n                        onClick={() => onDone(index)}\n                    >\n                        { todo.done ? 'Undo' : 'Done' }\n                    </Button>\n                    <Button\n                        variant=\"outline-danger\"\n                        size=\"sm\"\n                        onClick={() => onRemove(index)}\n                    >\n                        Delete\n                    </Button>\n                </div>\n            </div>\n          );\n    }\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass TodoForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value1: '',\n            value2: '',\n            value3: ''\n        }\n        this.input = React.createRef();\n    }\n\n    onValue1Change = value => {\n        this.setState({value1: value});\n    }\n\n    onValue2Change = value => {\n        this.setState({value2: value});\n    }\n\n    onValue3Change = value => {\n        this.setState({value3: value});\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        // console.log('A todo was submitted: ' + this.input.current.value);\n        // const { handleSubmit } = this.props;\n        // handleSubmit(this.input.current.value);\n\n\n        const { handleSubmit } = this.props;\n        const newTodo = {name: this.state.value1, priority: this.state.value2, notes: this.state.value3};\n        console.log(newTodo.value1)\n        handleSubmit(newTodo);\n        this.setState({value1: '',value2: '',value3:''});\n    }\n\n    render() {\n        return (\n            // <div className=\"form-container\">\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-container\">\n                    <input\n                        type=\"text\"\n                        className=\"input\"\n                        placeholder=\"New To-Do\"\n                        ref={this.input}\n                        value={this.state.value1}\n                        onChange={e => this.onValue1Change(e.target.value1)}\n                    />\n                     <input\n                        type=\"number\"\n                        className=\"input\"\n                        placeholder=\"priority\"\n                        ref={this.input}\n                        value={this.state.value2}\n                        onChange={e => this.onValue2Change(e.target.value2)}\n                    />\n                     <input\n                        type=\"text\"\n                        className=\"input\"\n                        placeholder=\"notes\"\n                        ref={this.input}\n                        value={this.state.value3}\n                        onChange={e => this.onValue3Change(e.target.value3)}\n                    />\n                    <Button\n                        className=\"add-button\"\n                        variant=\"outline-success\"\n                        size=\"sm\"\n                        type=\"submit\"\n                    >\n                        Add\n                    </Button>\n                    </div>\n                </form>\n            //</div>\n        );\n    }\n}\n\nexport default TodoForm;\n","import React, { Component } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass TodoSelect extends Component {\r\n    render() {\r\n        const {onFinished, onProgress, onAll} = this.props\r\n        return(\r\n            <div classname = \"filter\">\r\n                <Button\r\n                    variant=\"outline-danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => onProgress()}\r\n                >\r\n                    On Going\r\n                </Button>\r\n                <Button\r\n                    variant=\"outline-danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => onFinished()}\r\n                >\r\n                    Finished\r\n                </Button>\r\n                <Button\r\n                    variant=\"outline-danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => onAll()}\r\n                >\r\n                    All\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoSelect;","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport TodoSelect from './TodoSelect';\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: []\n        }\n    }\n    componentDidMount(){\n        fetch(\"http://devcamp1819b.herokuapp.com/tasks/\").then(resp => {\n            return resp.json()\n        }).then(tasks => {\n            console.log(tasks)\n            const newTodos = [...this.state.todos,...tasks];\n            const x = newTodos.length;\n            var min = 100000000;\n            var max = 0;\n            var i = 0;\n            while (i<x){\n                if (newTodos[i].priority < min){\n                    min = newTodos[i].priority;\n                }\n                if (newTodos[i].priority > max){\n                    max = newTodos[i].priority;\n                }\n                i+=1\n            }\n            var newTodos1 = new Array(x);\n            i = 0;\n            var k = 0;\n            while(i<=max){\n                var j = 0;\n                while(j < x){\n                    console.log(newTodos[j].priority,i,x)\n                    if(newTodos[j].priority===i){\n                        newTodos1[x-k] = newTodos[j];\n                        k+=1;\n                    }\n                    j+=1\n                }\n                i+=1\n            }\n            console.log(newTodos1)\n             this.setState({todos: newTodos1});\n        })\n        \n    }\n    add = text => {\n        console.log(text.priority,text.name,text.notes)\n        const newTodos = [...this.state.todos, text];\n        console.log(this.state.todos);\n        this.setState({todos: newTodos});\n\n\n        /* using Object.assign() */\n        // const newTodos = Object.assign([], this.state.todos)\n        // newTodos.push({ text: text, isCompleted: false })\n        // console.log(this.state.todos);\n        // this.setState({todos: newTodos});\n\n        /* mutation: no, no, no */\n        // let newTodos = this.state.todos;\n        // newTodos.push({text: text, isCompleted: false});\n        // console.log(this.state.todos);\n        // this.setState({todos:newTodos});\n\n        /* mutation? */\n        // let newTodos = this.state.todos.concat({text: text, isCompleted: false})\n        // console.log(this.state.todos);\n        // this.setState({todos:newTodos});\n    }\n\n    remove = index => {\n        const newTodos = [...this.state.todos];\n        newTodos.splice(index, 1);\n        this.setState({todos: newTodos});\n    }\n\n    done = index => {\n        const newTodos = [...this.state.todos];\n        newTodos[index].done = !newTodos[index].done\n        this.setState({todos: newTodos});\n\n        /* using Object.assign() for object manipulation */\n        // let newTodos = Object.assign({}, this.state)\n        // newTodos.todos[index].isCompleted = !newTodos.todos[index].isCompleted\n        // this.setState(newTodos);\n    }\n\n    all = () => {\n        fetch(\"http://devcamp1819b.herokuapp.com/tasks/\").then(resp => {\n            return resp.json()\n        }).then(tasks => {\n            console.log(tasks)\n            const newTodos = [...tasks];\n            const x = newTodos.length;\n            var min = 100000000;\n            var max = 0;\n            var i = 0;\n            while (i<x){\n                if (newTodos[i].priority < min){\n                    min = newTodos[i].priority;\n                }\n                if (newTodos[i].priority > max){\n                    max = newTodos[i].priority;\n                }\n                i+=1\n            }\n            var newTodos1 = new Array(x);\n            i = 0;\n            var k = 0;\n            while(i<=max){\n                var j = 0;\n                while(j < x){\n                    console.log(newTodos[j].priority,i,x)\n                    if(newTodos[j].priority===i){\n                        newTodos1[x-k] = newTodos[j];\n                        k+=1;\n                    }\n                    j+=1\n                }\n                i+=1\n            }\n            console.log(newTodos1)\n             this.setState({todos: newTodos1});\n        })\n    }\n\n    finished = () => {\n        fetch(\"http://devcamp1819b.herokuapp.com/tasks/done\").then(resp => {\n            return resp.json()\n        }).then(tasks => {\n            console.log(tasks)\n            const newTodos = [...tasks];\n            const x = newTodos.length;\n            var min = 100000000;\n            var max = 0;\n            var i = 0;\n            while (i<x){\n                if (newTodos[i].priority < min){\n                    min = newTodos[i].priority;\n                }\n                if (newTodos[i].priority > max){\n                    max = newTodos[i].priority;\n                }\n                i+=1\n            }\n            var newTodos1 = new Array(x);\n            i = 0;\n            var k = 0;\n            while(i<=max){\n                var j = 0;\n                while(j < x){\n                    console.log(newTodos[j].priority,i,x)\n                    if(newTodos[j].priority===i){\n                        newTodos1[x-k] = newTodos[j];\n                        k+=1;\n                    }\n                    j+=1\n                }\n                i+=1\n            }\n            console.log(newTodos1)\n             this.setState({todos: newTodos1});\n        })\n    }\n\n    ongoing = () => {\n        fetch(\"http://devcamp1819b.herokuapp.com/tasks/undone\").then(resp => {\n            return resp.json()\n        }).then(tasks => {\n            console.log(tasks)\n            const newTodos = [...tasks];\n            const x = newTodos.length;\n            var min = 100000000;\n            var max = 0;\n            var i = 0;\n            while (i<x){\n                if (newTodos[i].priority < min){\n                    min = newTodos[i].priority;\n                }\n                if (newTodos[i].priority > max){\n                    max = newTodos[i].priority;\n                }\n                i+=1\n            }\n            var newTodos1 = new Array(x);\n            i = 0;\n            var k = 0;\n            while(i<=max){\n                var j = 0;\n                while(j < x){\n                    console.log(newTodos[j].priority,i,x)\n                    if(newTodos[j].priority===i){\n                        newTodos1[x-k] = newTodos[j];\n                        k+=1;\n                    }\n                    j+=1\n                }\n                i+=1\n            }\n            console.log(newTodos1)\n             this.setState({todos: newTodos1});\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <TodoSelect\n                    onProgress = {this.ongoing}\n                    onFinished = {this.finished}\n                    onAll = {this.all}\n                />\n                {this.state.todos.map((todo, index) => (\n                <TodoItem\n                    key={index}\n                    index={index}\n                    todo={todo}\n                    onDone={this.done}\n                    onRemove={this.remove}\n                    onEdit={this.edit}\n                />\n                ))}\n                <hr />\n                <TodoForm handleSubmit={this.add}/>\n            </div>\n        );\n    }\n}\n\nexport default TodoList;","import React, { Component } from 'react';\nimport TodoList from './todo/TodoList';\nimport './App.css';\nimport './todo/Todo.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <div>\n          <h2>TO DO</h2>\n        </div>\n        <div className=\"todo-list\">\n          <TodoList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}